// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a ListView 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <List>
    <Subheader
        inset={false}
        style={
            Object {
                "color": "#000",
                "fontSize": 42,
                "fontWeight": 300,
                "marginBottom": 20,
                "paddingBottom": 20,
                "textAlign": "center",
              }
        }
    >
        My Tasks ðŸ—ƒ
    </Subheader>
    <ListItem
        autoGenerateNestedIndicator={true}
        containerElement="span"
        disableKeyboardFocus={false}
        disabled={false}
        initiallyOpen={false}
        insetChildren={false}
        nestedItems={Array []}
        nestedLevel={0}
        onKeyboardFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onNestedListToggle={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        open={null}
        primaryText="Test"
        primaryTogglesNestedList={false}
        rightIcon={
            <ActionDelete
                onTouchTap={[Function]}
            />
        }
        secondaryTextLines={1}
    />
    <ListItem
        autoGenerateNestedIndicator={true}
        containerElement="span"
        disableKeyboardFocus={false}
        disabled={false}
        initiallyOpen={false}
        insetChildren={false}
        nestedItems={Array []}
        nestedLevel={0}
        onKeyboardFocus={[Function]}
        onMouseEnter={[Function]}
        onMouseLeave={[Function]}
        onNestedListToggle={[Function]}
        onTouchEnd={[Function]}
        onTouchStart={[Function]}
        open={null}
        primaryText="Test2"
        primaryTogglesNestedList={false}
        rightIcon={
            <ActionDelete
                onTouchTap={[Function]}
            />
        }
        secondaryTextLines={1}
    />
</List>,
  "nodes": Array [
    <List>
      <Subheader
            inset={false}
            style={
                  Object {
                        "color": "#000",
                        "fontSize": 42,
                        "fontWeight": 300,
                        "marginBottom": 20,
                        "paddingBottom": 20,
                        "textAlign": "center",
                      }
            }
      >
            My Tasks ðŸ—ƒ
      </Subheader>
      <ListItem
            autoGenerateNestedIndicator={true}
            containerElement="span"
            disableKeyboardFocus={false}
            disabled={false}
            initiallyOpen={false}
            insetChildren={false}
            nestedItems={Array []}
            nestedLevel={0}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onNestedListToggle={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            open={null}
            primaryText="Test"
            primaryTogglesNestedList={false}
            rightIcon={
                  <ActionDelete
                        onTouchTap={[Function]}
                  />
            }
            secondaryTextLines={1}
      />
      <ListItem
            autoGenerateNestedIndicator={true}
            containerElement="span"
            disableKeyboardFocus={false}
            disabled={false}
            initiallyOpen={false}
            insetChildren={false}
            nestedItems={Array []}
            nestedLevel={0}
            onKeyboardFocus={[Function]}
            onMouseEnter={[Function]}
            onMouseLeave={[Function]}
            onNestedListToggle={[Function]}
            onTouchEnd={[Function]}
            onTouchStart={[Function]}
            open={null}
            primaryText="Test2"
            primaryTogglesNestedList={false}
            rightIcon={
                  <ActionDelete
                        onTouchTap={[Function]}
                  />
            }
            secondaryTextLines={1}
      />
</List>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ListView
        tasks={
                Array [
                        "Test",
                        "Test2",
                      ]
        }
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ListView {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "props": Object {
          "tasks": Array [
            "Test",
            "Test2",
          ],
        },
        "refs": Object {},
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <List>
          <Subheader
                    inset={false}
                    style={
                              Object {
                                        "color": "#000",
                                        "fontSize": 42,
                                        "fontWeight": 300,
                                        "marginBottom": 20,
                                        "paddingBottom": 20,
                                        "textAlign": "center",
                                      }
                    }
          >
                    My Tasks ðŸ—ƒ
          </Subheader>
          <ListItem
                    autoGenerateNestedIndicator={true}
                    containerElement="span"
                    disableKeyboardFocus={false}
                    disabled={false}
                    initiallyOpen={false}
                    insetChildren={false}
                    nestedItems={Array []}
                    nestedLevel={0}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onNestedListToggle={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    open={null}
                    primaryText="Test"
                    primaryTogglesNestedList={false}
                    rightIcon={
                              <ActionDelete
                                        onTouchTap={[Function]}
                              />
                    }
                    secondaryTextLines={1}
          />
          <ListItem
                    autoGenerateNestedIndicator={true}
                    containerElement="span"
                    disableKeyboardFocus={false}
                    disabled={false}
                    initiallyOpen={false}
                    insetChildren={false}
                    nestedItems={Array []}
                    nestedLevel={0}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onNestedListToggle={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    open={null}
                    primaryText="Test2"
                    primaryTogglesNestedList={false}
                    rightIcon={
                              <ActionDelete
                                        onTouchTap={[Function]}
                              />
                    }
                    secondaryTextLines={1}
          />
</List>,
        "_debugID": 2,
        "_renderedOutput": <List>
          <Subheader
                    inset={false}
                    style={
                              Object {
                                        "color": "#000",
                                        "fontSize": 42,
                                        "fontWeight": 300,
                                        "marginBottom": 20,
                                        "paddingBottom": 20,
                                        "textAlign": "center",
                                      }
                    }
          >
                    My Tasks ðŸ—ƒ
          </Subheader>
          <ListItem
                    autoGenerateNestedIndicator={true}
                    containerElement="span"
                    disableKeyboardFocus={false}
                    disabled={false}
                    initiallyOpen={false}
                    insetChildren={false}
                    nestedItems={Array []}
                    nestedLevel={0}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onNestedListToggle={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    open={null}
                    primaryText="Test"
                    primaryTogglesNestedList={false}
                    rightIcon={
                              <ActionDelete
                                        onTouchTap={[Function]}
                              />
                    }
                    secondaryTextLines={1}
          />
          <ListItem
                    autoGenerateNestedIndicator={true}
                    containerElement="span"
                    disableKeyboardFocus={false}
                    disabled={false}
                    initiallyOpen={false}
                    insetChildren={false}
                    nestedItems={Array []}
                    nestedLevel={0}
                    onKeyboardFocus={[Function]}
                    onMouseEnter={[Function]}
                    onMouseLeave={[Function]}
                    onNestedListToggle={[Function]}
                    onTouchEnd={[Function]}
                    onTouchStart={[Function]}
                    open={null}
                    primaryText="Test2"
                    primaryTogglesNestedList={false}
                    rightIcon={
                              <ActionDelete
                                        onTouchTap={[Function]}
                              />
                    }
                    secondaryTextLines={1}
          />
</List>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ListView
    tasks={
        Array [
            "Test",
            "Test2",
          ]
    }
/>,
}
`;
